{
	"credit": "Created by FreshLX for Fresh_Animations",
	"textureSize": [128, 64],
	"texture": "textures/entity/horse/horse_baby.png",
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [-0.5, -13, 5],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.rearing": "if(neck.ty<4, -(neck.ty-4)/8*(1-var.testing), 0)",
					"var.ls": " limb_swing*0.75/if(is_child, 1.8, 1)",
					"var.r": "random(id)*pi*4",
					"var.k": "(limb_swing/if(!is_on_ground&&is_in_water, 4, 20)+age)",
					"var.b": "   var.k/if(is_child, 35, 70)*pi*2 +var.r",
					"var.swim": "var.k/if(is_child, 10, 15)*pi*2 +var.r",
					"var.run": "    clamp(cos((limb_speed*pi)-pi    )*1.1, 0, 1)",
					"var.walk": "(1-clamp(cos((limb_speed*pi)-pi*1.2)*1.1, 0, 1))",
					"var.walk_speed": "clamp(0.3+limb_speed*4, 0, 1)",
					"var.nov1": "clamp( if( is_in_water || !is_on_ground || neck2.rx>=torad(90), 0, (0.5-0.5*cos( clamp((if(is_ridden, -145.7, -145.3) +sin(var.r +age/if(is_ridden, 560, 280))*146)*if(is_ridden, 4, 2), 0, 1)*pi )) ), 0, clamp(2-limb_speed*1.5, 0, if(neck2.rx>=torad(90), 0, 1)) )"
				},
				{
					"body.rx": "if(!is_on_ground&&is_in_water, torad(-5) +sin(pi/4+var.swim)/10, ( (sin(var.ls)/20 -cos(pi/4+var.ls)/16)*limb_speed*if(is_child, 2, 0.7)*(1-var.rearing/if(is_on_ground, 1.2, 3)) )*var.run  +(sin(-pi/4+var.ls*2)/30*var.walk_speed)*var.walk ) +sin(var.b-torad(45))/60 +(-0.7 +sin(var.k/2 +var.r)/25)*var.rearing +( torad(3) )*var.nov1",
					"body.ry": "clamp(torad(head_yaw)/10, torad(-5), torad(5))/2",
					"body.rz": "(-sin(var.ls)/40*var.walk_speed)*var.walk +( sin(-pi/4 +var.r+age/1.5)/32 )*var.nov1",
					"body.tx": "(-sin(var.ls)/16*var.walk_speed)*var.walk",
					"body.ty": "11.3 +if(!is_on_ground&&is_in_water, if(is_ridden, 1, 7), (cos(var.ls +sin(var.ls)/3)*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)))*var.run +( (-cos(var.ls*2) +2)/4*var.walk_speed*if(is_child, 2, 1))*var.walk ) +sin(var.b)/6",
					"body.tz": "5 +if(!is_on_ground&&is_in_water, sin(var.ls*2)/2, (cos(var.ls*2)/4*var.walk_speed)*var.walk )",
					"neck2.rx": "if(!is_on_ground&&is_in_water, torad(5) -sin(pi/4+var.swim)/8, (cos(var.ls)/10*limb_speed*(1-var.rearing*0.75))*var.run +(cos(var.ls*2)/20*var.walk_speed)*var.walk ) +clamp(neck.rx, torad(10), torad(140))*clamp(1-(limb_speed*2), 0, 1) +(torad(45) +torad(head_pitch)/2)*clamp((limb_speed*2), 0, 1) +cos(var.b)/80 +(-body.rx*1.2 +(-torad(30)*limb_speed -cos(var.k/2 +var.r)/25)*var.rearing) +torad(30)*var.nov1",
					"neck2.ry": "clamp(torad(head_yaw)/2, torad(-20), torad(20)) +( cos(var.r+age/1.5)/6 )*var.nov1",
					"neck2.rz": "neck.rz -body.rz +( cos(var.r+age/1.5)/4 )*var.nov1",
					"neck2.tx": "-0.5 + clamp(-torad(head_yaw)*2.5, -2, 2) -( cos(var.r+age/1.5)*1.3 )*var.nov1",
					"neck2.ty": "-17.5 +if(!is_on_ground&&is_in_water, -sin(pi/4+var.swim), (-sin(-pi/4+var.ls)*limb_speed*(1-var.rearing*0.75))*var.run +(cos(var.ls*2)/2*var.walk_speed)*var.walk) +clamp( torad(head_pitch)*3, -2, 4) +limb_speed +var.rearing*2.5 +if(neck.ty>4, neck.ty-4, 0) +if(is_child, clamp(-2+limb_speed*4, -2, 0) +if(neck2.rx>=torad(90), 2, 0), 0) +( 2 )*var.nov1",
					"neck2.tz": "-5.5 +if(!is_on_ground&&is_in_water,  sin(pi/4+var.swim), 0 ) +clamp(-torad(head_pitch)*3, -0, 2) +(1 )*var.nov1",
					"neck2.sx": "if(is_child, 1.1, 1)",
					"neck2.sy": "neck2.sx",
					"neck2.sz": "neck2.sx",
					"head2.rx": "clamp( if(!is_on_ground&&is_in_water, sin(pi/4+var.swim)/10 +torad(-10), (-sin(torad(30)+var.ls)/8*limb_speed*(1-var.rearing*0.75))*var.run +(-cos(var.ls*2)/20*clamp(limb_speed*4, 0, 1)/1.5)*var.walk ) -torad(20)*limb_speed*(1-var.rearing) +if(neck2.rx>=torad(90), -torad(20), 0), -0.5, 0.006) -torad(30)*var.nov1",
					"head2.ry": "clamp(torad(head_yaw)/6, torad(-15), torad(15)) -( sin(var.r+age/1.5)/8 )*var.nov1",
					"head2.rz": "-( sin(var.r+age/1.5)/3   )*var.nov1",
					"head2.tx": "0.5 + ( sin(var.r+age/1.5)/1.3 )*var.nov1",
					"head2.ty": "-2.5 -2*var.nov1",
					"head2.tz": "0 -1.5*var.nov1",
					"neck3.sy": "1 +clamp(-head2.rx/4, 0, 0.2)"
				},
				{
					"head2.sx": 1,
					"head2.sy": 1,
					"head2.sz": 1,
					"body.sx": 1,
					"body.sy": 1,
					"body.sz": 1,
					"front_left_leg.sx": 1,
					"front_left_leg.sy": 1,
					"front_left_leg.sz": 1,
					"front_right_leg.sx": 1,
					"front_right_leg.sy": 1,
					"front_right_leg.sz": 1,
					"back_left_leg.sx": 1,
					"back_left_leg.sy": 1,
					"back_left_leg.sz": 1,
					"back_right_leg.sx": 1,
					"back_right_leg.sy": 1,
					"back_right_leg.sz": 1
				},
				{
					"back_right_leg.rx": "-sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, ( sin(var.swim)/2 +clamp( cos(var.swim)/3, torad(-20), 0))                 ,  ( (sin(torad(  0    )+var.ls +sin(pi/4+torad(  0    )+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))/2 +clamp(sin(torad(  0     +90)+var.ls)/4, torad(-20), 0))*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run  +((asin( sin(torad( 90)+var.ls) )/4*var.walk_speed +clamp(sin(torad( 90 +90)+var.ls)/5, torad(-20), 0)*clamp(limb_speed*6, 0, 1))*if(is_on_ground, 1, (1-var.rearing)) )*var.walk  )",
					"back_left_leg.rx": " -sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, (-sin(var.swim)/2 +clamp(-cos(var.swim)/3, torad(-20), 0))                 ,  ( (sin(torad(-90 +30)+var.ls +sin(pi/4+torad(-90 +30)+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))/2 +clamp(sin(torad(-90 +30 +90)+var.ls)/4, torad(-20), 0))*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run  +((asin( sin(torad(-90)+var.ls) )/4*var.walk_speed +clamp(sin(torad(-90 +90)+var.ls)/5, torad(-20), 0)*clamp(limb_speed*6, 0, 1))*if(is_on_ground, 1, (1-var.rearing)) )*var.walk  )   -0.4*var.rearing/if(is_child, 2, 1)",
					"front_right_leg.rx": "sin(var.b)/40/if(is_child, 1.5, 1) -torad(2) +if(!is_on_ground&&is_in_water, (-cos(var.swim)/2 +clamp(-sin(var.swim)/3, 0, torad( 20)))*(1-var.rearing) ,  ( (sin(torad(-90    )+var.ls +sin(pi/4+torad(-90    )+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))/2 +clamp(sin(torad(-90     -90)+var.ls)/4, 0, torad( 20)))*limb_speed*if(is_child, 1, 1.2)                     *(1-var.rearing)  )*var.run  +((asin( sin(torad( 0 )+var.ls) )/4*var.walk_speed +clamp(sin(torad( 0  -90)+var.ls)/5, 0, torad( 20))*clamp(limb_speed*6, 0, 1))*                    (1-var.rearing)  )*var.walk  ) +(-0.4 -sin(var.k/2 +var.r)/2.5)*var.rearing",
					"front_left_leg.rx": " sin(var.b)/40/if(is_child, 1.5, 1) -torad(2) +if(!is_on_ground&&is_in_water, ( cos(var.swim)/2 +clamp( sin(var.swim)/3, 0, torad( 20)))*(1-var.rearing) ,  ( (sin(torad(180 +30)+var.ls +sin(pi/4+torad(180 +30)+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))/2 +clamp(sin(torad(180 +30 -90)+var.ls)/4, 0, torad( 20)))*limb_speed*if(is_child, 1, 1.2)                     *(1-var.rearing)  )*var.run  +((asin( sin(torad(180)+var.ls) )/4*var.walk_speed +clamp(sin(torad(180 -90)+var.ls)/5, 0, torad( 20))*clamp(limb_speed*6, 0, 1))*                    (1-var.rearing)  )*var.walk  ) +(-0.4 +sin(var.k/2 +var.r)/2.5)*var.rearing",
					"back_right_leg.ry": " body.ry -var.rearing/3.75*clamp(1-limb_speed*6, 0, 1)",
					"back_left_leg.ry": "  body.ry",
					"front_right_leg.ry": "body.ry +torad(-5)*clamp(1-limb_speed*6, 0, 1)",
					"front_left_leg.ry": " body.ry +torad( 5)*clamp(1-limb_speed*6, 0, 1)",
					"back_right_leg.rz": " if(!is_on_ground&&is_in_water, torad(-5)                , 0) +clamp( torad(head_yaw)/12, torad(-3), torad(3))/2",
					"back_left_leg.rz": "  if(!is_on_ground&&is_in_water, torad( 5)                , 0) +clamp( torad(head_yaw)/12, torad(-3), torad(3))/2",
					"front_right_leg.rz": "if(!is_on_ground&&is_in_water, torad(-5)*(1-var.rearing), 0) +clamp(-torad(head_yaw)/12, torad(-8), torad(8))/2 +var.rearing/7.5",
					"front_left_leg.rz": " if(!is_on_ground&&is_in_water, torad( 5)*(1-var.rearing), 0) +clamp(-torad(head_yaw)/12, torad(-8), torad(8))/2 -var.rearing/7.5",
					"back_right_leg.tx": " 1 + if(!is_on_ground&&is_in_water,  1            , 0) +var.rearing/7.5",
					"back_left_leg.tx": " -2 + if(!is_on_ground&&is_in_water, -1            , 0)",
					"front_right_leg.tx": "1 + if(!is_on_ground&&is_in_water,  1-var.rearing, 0)",
					"front_left_leg.tx": "-2 + if(!is_on_ground&&is_in_water, -1-var.rearing, 0)",
					"back_right_leg.ty": " 23 + if(!is_on_ground&&is_in_water, if(is_ridden,  0, 6) +cos(var.swim)*1.5                , clamp( (                 -2.5*limb_speed  +sin(torad( 90    )+var.ls)*2*limb_speed*if(is_child, 1.8, 1)*if(is_on_ground, 1, (1-var.rearing)))*var.run  +(sin(torad(180)+var.ls)*2*clamp(limb_speed*4, 0, 1)*(1-var.rearing))*var.walk, -4, 0))",
					"back_left_leg.ty": "  23 + if(!is_on_ground&&is_in_water, if(is_ridden,  0, 6) -cos(var.swim)*1.5                , clamp( (                 -2.5*limb_speed  +sin(torad(  0 +30)+var.ls)*2*limb_speed*if(is_child, 1.8, 1)*if(is_on_ground, 1, (1-var.rearing)))*var.run  +(sin(torad( 0 )+var.ls)*2*clamp(limb_speed*4, 0, 1)*(1-var.rearing))*var.walk, -4, 0))",
					"front_right_leg.ty": "23 + if(!is_on_ground&&is_in_water, if(is_ridden, -3, 3) +sin(var.swim)*1.5*(1-var.rearing), clamp( (if(neck.ty<4, 0, -2.5*limb_speed) +sin(torad(  0    )+var.ls)*2*limb_speed*if(is_child, 1.8, 1)*                    (1-var.rearing) )*var.run  +(sin(torad( 90)+var.ls)*2*clamp(limb_speed*4, 0, 1)*(1-var.rearing))*var.walk, -4, 0)) +(-14 -cos(var.k/2 +var.r)*3/2.5)*var.rearing",
					"front_left_leg.ty": " 23 + if(!is_on_ground&&is_in_water, if(is_ridden, -3, 3) -sin(var.swim)*1.5*(1-var.rearing), clamp( (if(neck.ty<4, 0, -2.5*limb_speed) +sin(torad(-90 +30)+var.ls)*2*limb_speed*if(is_child, 1.8, 1)*                    (1-var.rearing) )*var.run  +(sin(torad(-90)+var.ls)*2*clamp(limb_speed*4, 0, 1)*(1-var.rearing))*var.walk, -4, 0)) +(-14 +cos(var.k/2 +var.r)*3/2.5)*var.rearing",
					"back_right_leg.tz": "  3    + if(!is_on_ground&&is_in_water,  sin(var.swim)*6                , (sin(torad(  0    )+var.ls +sin(pi/4 +torad(  0    )+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))*6*limb_speed*if(is_child, 1.2, 1)*if(is_on_ground, 1, (1-var.rearing)))*var.run +(asin( sin(torad( 90)+var.ls) )*4*var.walk_speed*(1-var.rearing))*var.walk ) +var.rearing*2.5",
					"back_left_leg.tz": "   3    + if(!is_on_ground&&is_in_water, -sin(var.swim)*6                , (sin(torad(-90 +30)+var.ls +sin(pi/4 +torad(-90 +30)+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))*6*limb_speed*if(is_child, 1.2, 1)*if(is_on_ground, 1, (1-var.rearing)))*var.run +(asin( sin(torad(-90)+var.ls) )*4*var.walk_speed*(1-var.rearing))*var.walk ) -var.rearing*2.5",
					"front_right_leg.tz": "-5.5 + if(!is_on_ground&&is_in_water, -cos(var.swim)*6*(1-var.rearing), (sin(torad(-90    )+var.ls +sin(pi/4 +torad(-90    )+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))*6*limb_speed*if(is_child, 1.2, 1)*                    (1-var.rearing) )*var.run +(asin( sin(torad( 0 )+var.ls) )*4*var.walk_speed*(1-var.rearing))*var.walk ) +( -2 -sin(var.k/2 +var.r)*2)*var.rearing",
					"front_left_leg.tz": " -5.5 + if(!is_on_ground&&is_in_water,  cos(var.swim)*6*(1-var.rearing), (sin(torad(180 +30)+var.ls +sin(pi/4 +torad(180 +30)+var.ls)/2*clamp(-3+limb_speed*4, 0, 1))*6*limb_speed*if(is_child, 1.2, 1)*                    (1-var.rearing) )*var.run +(asin( sin(torad(180)+var.ls) )*4*var.walk_speed*(1-var.rearing))*var.walk ) +( -2 +sin(var.k/2 +var.r)*2)*var.rearing"
				},
				{
					"tail2.rx": "if(!is_on_ground&&is_in_water, -cos(var.swim    )/8 , (-sin(var.ls-pi/4)/5 *limb_speed)*var.run +(-cos(     var.ls*2)/12*var.walk_speed)*var.walk -torad(15)) +tail.rx -body.rx +cos(var.b)/30",
					"tail2.ry": "if(!is_on_ground&&is_in_water, -sin(var.swim/1.2)/12, (-cos(var.ls/1.2 )/12*limb_speed)*var.run +(-cos(pi/4+var.ls  )/12*var.walk_speed)*var.walk           )",
					"tail2.rz": "-body.rz +sin(limb_swing+var.k/2 +var.r)*clamp(sin(limb_swing+(var.k/30) +var.r)/30, 0, 1) +(-cos(var.ls)/12*var.walk_speed)*var.walk",
					"tail2.ty": "-11.5 +(cos(var.ls)/2*limb_speed )*var.run",
					"mane3.rx": "torad(30)*var.nov1",
					"mane2.ry": "           ( sin(var.r+age/1.5)/2 )*var.nov1",
					"mane3.ry": "-head2.ry +( sin(var.r+age/1.5)/5 )*var.nov1",
					"mane3.rz": "           ( sin(var.r+age/1.5)/2 )*var.nov1",
					"mane3.tx": "-0.5",
					"mane2.ty": "-0.5",
					"mane3.ty": "-3.5",
					"right_ear2.rx": "sin(torad(-60)+var.ls)/4*limb_speed +clamp((-47 +sin(          var.r+age/26*2)*48)*clamp(-32 +cos(          (var.r+age/26)/1.5)*40 +cos(          (var.r+age/26)/4)*40, 0, 1), 0, 1)/2",
					"left_ear2.rx": " sin(torad(-60)+var.ls)/4*limb_speed +clamp((-47 +sin(torad(90)+var.r+age/26*2)*48)*clamp(-32 +cos(torad(90)+(var.r+age/26)/1.5)*40 +cos(torad(90)+(var.r+age/26)/4)*40, 0, 1), 0, 1)/2",
					"right_ear2.ry": "clamp(torad( 8 +10*limb_speed +head_yaw/2), torad(-5), torad( 80)) +clamp((-47 +sin(torad( 5)+var.r+age/26*2)*48)*clamp(-32 +cos(torad( 5)+(var.r+age/26)/1.5)*40 +cos(torad( 5)+(var.r+age/26)/4)*40, 0, 1), 0, 1) +( torad( 25) )*var.nov1",
					"left_ear2.ry": " clamp(torad(-8 -10*limb_speed +head_yaw/2), torad(-80), torad( 5)) -clamp((-47 +sin(torad(95)+var.r+age/26*2)*48)*clamp(-32 +cos(torad(95)+(var.r+age/26)/1.5)*40 +cos(torad(95)+(var.r+age/26)/4)*40, 0, 1), 0, 1) +( torad(-25) )*var.nov1",
					"right_ear2.rz": "torad(-5) -( right_ear2.rx -sin(torad(-60)+var.ls)/2*limb_speed )/3 +( torad(-25) +cos(var.r+age/1.5)/2 )*var.nov1",
					"left_ear2.rz": " torad( 5) +(  left_ear2.rx -sin(torad(-60)+var.ls)/2*limb_speed )/3 +( torad( 25) +cos(var.r+age/1.5)/2 )*var.nov1",
					"right_eye.tz": "-2 +clamp( torad(head_yaw)/1.7, 0, 1)",
					"left_eye.tz": " -2 +clamp(-torad(head_yaw)/1.7, 0, 1)",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/12)*6))*clamp(-32 +cos((var.r+age/12)/1.5)*40 +cos((var.r+age/12)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": "right_blink.sy",
					"right_blink.sz": "if(right_blink.sy==0||right_blink.sx==0, 0, 1)",
					"left_blink.sz": " if( left_blink.sy==0|| left_blink.sx==0, 0, 1)"
				},
				{
					"child_back_right_leg.rx": " back_right_leg.rx",
					"child_back_left_leg.rx": "  back_left_leg.rx",
					"child_front_right_leg.rx": "front_right_leg.rx",
					"child_front_left_leg.rx": " front_left_leg.rx",
					"child_back_right_leg.ry": " back_right_leg.ry",
					"child_back_left_leg.ry": "  back_left_leg.ry",
					"child_front_right_leg.ry": "front_right_leg.ry",
					"child_front_left_leg.ry": " front_left_leg.ry",
					"child_back_right_leg.rz": " back_right_leg.rz",
					"child_back_left_leg.rz": "  back_left_leg.rz",
					"child_front_right_leg.rz": "front_right_leg.rz",
					"child_front_left_leg.rz": " front_left_leg.rz",
					"child_back_right_leg.tx": " back_right_leg.tx",
					"child_back_left_leg.tx": "  back_left_leg.tx",
					"child_front_right_leg.tx": "front_right_leg.tx",
					"child_front_left_leg.tx": " front_left_leg.tx",
					"child_back_right_leg.ty": " back_right_leg.ty  +4",
					"child_back_left_leg.ty": "  back_left_leg.ty   +4",
					"child_front_right_leg.ty": "front_right_leg.ty +4",
					"child_front_left_leg.ty": " front_left_leg.ty  +4",
					"child_back_right_leg.tz": " back_right_leg.tz",
					"child_back_left_leg.tz": "  back_left_leg.tz",
					"child_front_right_leg.tz": "front_right_leg.tz",
					"child_front_left_leg.tz": " front_left_leg.tz"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -13, -6],
			"boxes": [
				{"coordinates": [-2, 7, -6, 5, 5, 12], "textureOffset": [10, 47], "sizeAdd": 0.04}
			],
			"submodels": [
				{
					"id": "neck2",
					"invertAxis": "xy",
					"translate": [0.5, 13, -5],
					"submodels": [
						{
							"id": "neck3",
							"invertAxis": "xy",
							"translate": [0, -2, -1],
							"boxes": [
								{"coordinates": [-1.5, -1, 0, 3, 7, 4], "textureOffset": [0, 35], "sizeAdd": -0.01}
							]
						},
						{
							"id": "head2",
							"invertAxis": "xy",
							"translate": [-0.5, 2.5, 0],
							"boxes": [
								{"coordinates": [-2, 0, -1, 5, 4, 4], "textureOffset": [0, 5]}
							],
							"submodels": [
								{
									"id": "snout2",
									"invertAxis": "xy",
									"translate": [0, 0, -4],
									"boxes": [
										{"coordinates": [-1, 0, -1, 3, 4, 4], "textureOffset": [0, 27]}
									]
								},
								{
									"id": "left_eye",
									"invertAxis": "xy",
									"translate": [1, 2, -2],
									"boxes": [
										{
											"coordinates": [-3.025, 0, 1, 0.25, 1, 1],
											"uvNorth": [16, 26, 17, 27],
											"uvEast": [16, 26, 17, 27],
											"uvSouth": [16, 26, 17, 27],
											"uvWest": [16, 26, 17, 27],
											"uvUp": [16, 26, 17, 27],
											"uvDown": [16, 26, 17, 27]
										}
									]
								},
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"translate": [-2, 3, 0],
									"boxes": [
										{
											"coordinates": [-0.025, -1, -1, 0.25, 1, 2],
											"uvNorth": [15, 25, 16, 26],
											"uvEast": [15, 25, 17, 26],
											"uvSouth": [16, 25, 17, 26],
											"uvWest": [15, 25, 17, 26],
											"uvUp": [15, 25, 17, 26],
											"uvDown": [15, 25, 17, 26],
											"sizeAdd": 0.02
										}
									]
								},
								{
									"id": "right_eye",
									"invertAxis": "xy",
									"translate": [0, 2, -2],
									"boxes": [
										{
											"coordinates": [2.775, 0, 1, 0.25, 1, 1],
											"uvNorth": [3, 26, 4, 27],
											"uvEast": [3, 26, 4, 27],
											"uvSouth": [3, 26, 4, 27],
											"uvWest": [3, 26, 4, 27],
											"uvUp": [3, 26, 4, 27],
											"uvDown": [3, 26, 4, 27]
										}
									]
								},
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"translate": [3, 3, 0],
									"boxes": [
										{
											"coordinates": [-0.225, -1, -1, 0.25, 1, 2],
											"uvNorth": [4, 25, 5, 26],
											"uvEast": [3, 25, 5, 26],
											"uvSouth": [3, 25, 4, 26],
											"uvWest": [3, 25, 5, 26],
											"uvUp": [3, 25, 5, 26],
											"uvDown": [3, 25, 5, 26],
											"sizeAdd": 0.02
										}
									]
								},
								{
									"id": "left_ear2",
									"invertAxis": "xy",
									"translate": [-0.5, 4, 2.75],
									"boxes": [
										{
											"coordinates": [-1.5, 0, -1.01, 2, 2, 1],
											"uvNorth": [22, 17, 20, 19],
											"uvEast": [23, 17, 22, 19],
											"uvSouth": [25, 17, 23, 19],
											"uvWest": [20, 17, 19, 19],
											"uvUp": [20, 17, 22, 16],
											"uvDown": [22, 16, 24, 17]
										}
									]
								},
								{
									"id": "right_ear2",
									"invertAxis": "xy",
									"translate": [1.5, 4, 2.75],
									"boxes": [
										{
											"coordinates": [-0.5, 0, -1.01, 2, 2, 1],
											"uvNorth": [20, 17, 22, 19],
											"uvEast": [19, 17, 20, 19],
											"uvSouth": [23, 17, 25, 19],
											"uvWest": [22, 17, 23, 19],
											"uvUp": [22, 17, 20, 16],
											"uvDown": [24, 16, 22, 17]
										}
									]
								},
								{
									"id": "mane3",
									"invertAxis": "xy",
									"translate": [0.5, 3.5, 3],
									"boxes": [
										{"coordinates": [0, -3.525, 0, 0, 4, 1], "textureOffset": [56, 37]}
									]
								}
							]
						},
						{
							"id": "mane2",
							"invertAxis": "xy",
							"translate": [0, -1, 3],
							"boxes": [
								{"coordinates": [0, -3.525, 0, 0, 7, 1], "textureOffset": [56, 41]}
							]
						}
					]
				},
				{
					"id": "tail2",
					"invertAxis": "xy",
					"translate": [1, 11.75, 6],
					"rotate": [-15, 0, 0],
					"boxes": [
						{"coordinates": [-1.5, -7, -1, 2, 7, 2], "textureOffset": [34, 38]}
					]
				}
			]
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, -13, -6],
			"submodels": [
				{
					"id": "headpiece_neck",
					"invertAxis": "xy",
					"translate": [0.05, 22, -9],
					"submodels": [
						{
							"id": "headpiece_head",
							"invertAxis": "xy",
							"translate": [-0.05, 5.5, 2],
							"submodels": [
								{
									"id": "right_rein2",
									"invertAxis": "xy",
									"translate": [-3.1, 2.5, -7],
									"rotate": [90, 0, 0]
								},
								{
									"id": "left_rein2",
									"invertAxis": "xy",
									"translate": [3.1, 2.5, -7],
									"rotate": [90, 0, 0]
								}
							]
						}
					]
				},
				{
					"id": "left_saddle",
					"invertAxis": "xy",
					"translate": [-5.4, 20.5, -1.5]
				},
				{
					"id": "right_saddle",
					"invertAxis": "xy",
					"translate": [5.4, 20.5, -1.5]
				},
				{
					"id": "left_chest",
					"invertAxis": "xy",
					"translate": [7, 21, 6],
					"rotate": [0, 90, 0],
					"submodels": [
						{
							"id": "left_chest_rotation",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "right_chest",
					"invertAxis": "xy",
					"translate": [-7, 21, 6],
					"rotate": [0, -90, 0],
					"submodels": [
						{
							"id": "right_chest_rotation",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						}
					]
				}
			]
		},
		{
			"part": "front_left_leg",
			"id": "front_left_leg",
			"invertAxis": "xy",
			"translate": [1, -1, 5],
			"boxes": [
				{"coordinates": [-2, 0, -6, 2, 7, 2], "textureOffset": [48, 0]}
			]
		},
		{
			"part": "front_right_leg",
			"id": "front_right_leg",
			"invertAxis": "xy",
			"translate": [-2, -1, 5],
			"boxes": [
				{"coordinates": [1, 0, -6, 2, 7, 2], "textureOffset": [48, 9]}
			]
		},
		{
			"part": "back_left_leg",
			"id": "back_left_leg",
			"invertAxis": "xy",
			"translate": [1, -1, -5],
			"boxes": [
				{"coordinates": [-2, 0, 4, 2, 7, 2], "textureOffset": [56, 0]}
			]
		},
		{
			"part": "back_right_leg",
			"id": "back_right_leg",
			"invertAxis": "xy",
			"translate": [-2, -1, -5],
			"boxes": [
				{"coordinates": [1, 0, 4, 2, 7, 2], "textureOffset": [56, 9]}
			]
		},
		{
			"part": "headpiece",
			"id": "headpiece",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_ear",
			"id": "left_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_ear",
			"id": "right_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "neck",
			"id": "neck",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "mouth",
			"id": "mouth",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "mane",
			"id": "mane",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "noseband",
			"id": "noseband",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_bit",
			"id": "left_bit",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_bit",
			"id": "right_bit",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "tail",
			"id": "tail",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_rein",
			"id": "left_rein",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_rein",
			"id": "right_rein",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "back_left_leg",
			"id": "back_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "back_right_leg",
			"id": "back_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "front_left_leg",
			"id": "front_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "front_right_leg",
			"id": "front_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "back_left_leg",
			"id": "back_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "back_right_leg",
			"id": "back_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "front_left_leg",
			"id": "front_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "front_right_leg",
			"id": "front_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_back_left_leg",
			"id": "child_back_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_back_right_leg",
			"id": "child_back_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_front_left_leg",
			"id": "child_front_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_front_right_leg",
			"id": "child_front_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_back_left_leg",
			"id": "child_back_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_back_right_leg",
			"id": "child_back_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_front_left_leg",
			"id": "child_front_left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "child_front_right_leg",
			"id": "child_front_right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}